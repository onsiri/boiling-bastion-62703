# Generated by Django 5.1.7 on 2025-04-04 16:16

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BulkUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s3_key', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(max_length=100, unique=True)),
                ('existing_customer', models.BooleanField()),
                ('country', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=10)),
                ('income', models.IntegerField()),
                ('occupation', models.CharField(max_length=100)),
                ('education_level', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ItemCode', models.CharField(max_length=50, unique=True)),
                ('ItemDescription', models.CharField(max_length=200)),
                ('CostPerItem', models.DecimalField(decimal_places=2, max_digits=10)),
                ('uploaded_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='sale_forecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ds', models.DateField()),
                ('prediction', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prediction_lower', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prediction_upper', models.DecimalField(decimal_places=2, max_digits=10)),
                ('uploaded_at', models.DateTimeField(auto_now=True)),
                ('accuracy_score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CountrySaleForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=100)),
                ('ds', models.DateField()),
                ('prediction', models.FloatField()),
                ('prediction_lower', models.FloatField()),
                ('prediction_upper', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['group', 'ds'], name='ai_models_c_group_ec8b69_idx'), models.Index(fields=['ds'], name='ai_models_c_ds_af5d5f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ItemSaleForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=200)),
                ('ds', models.DateField()),
                ('prediction', models.FloatField()),
                ('prediction_lower', models.FloatField()),
                ('prediction_upper', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['group', 'ds'], name='ai_models_i_group_9fa743_idx'), models.Index(fields=['ds'], name='ai_models_i_ds_2558d9_idx')],
            },
        ),
        migrations.CreateModel(
            name='NextItemPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(max_length=100)),
                ('PredictedItemCode', models.CharField(max_length=100)),
                ('PredictedItemDescription', models.CharField(max_length=200, null=True)),
                ('PredictedItemCost', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('Probability', models.FloatField()),
                ('PredictedAt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('UserId', 'PredictedAt'), name='unique_user_id_and_predicted_at')],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TransactionId', models.CharField(max_length=255)),
                ('TransactionTime', models.CharField(max_length=500)),
                ('ItemCode', models.CharField(max_length=100)),
                ('ItemDescription', models.TextField()),
                ('NumberOfItemsPurchased', models.IntegerField()),
                ('CostPerItem', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Country', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='ai_models.customerdetail')),
            ],
        ),
        migrations.CreateModel(
            name='NewCustomerRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=100)),
                ('recommendation_type', models.CharField(choices=[('PL', 'Personalized'), ('TR', 'Trending'), ('PP', 'Popular')], default='PL', max_length=2)),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('generation_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Recommendation validity period', null=True)),
                ('recommendation_metadata', models.JSONField(default=dict, help_text='Stores model version, neighbor count, and feature weights')),
                ('user', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='ai_models.customerdetail')),
            ],
            options={
                'verbose_name': 'New Customer Recommendation',
                'verbose_name_plural': 'New Customer Recommendations',
                'ordering': ['-confidence_score'],
                'indexes': [models.Index(fields=['generation_date', '-confidence_score'], name='ai_models_n_generat_09f67b_idx'), models.Index(fields=['item_code', 'recommendation_type'], name='ai_models_n_item_co_6046a3_idx')],
            },
        ),
    ]
