# Generated by Django 5.0.12 on 2025-03-17 03:54

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai_models', '0023_alter_transaction_transactionid'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='transaction',
            name='upload_batch',
        ),
        migrations.AlterField(
            model_name='customerdetail',
            name='UserId',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='TransactionId',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.CreateModel(
            name='NewCustomerRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=100)),
                ('recommendation_type', models.CharField(choices=[('PL', 'Personalized'), ('TR', 'Trending'), ('PP', 'Popular')], default='PL', max_length=2)),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('generation_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Recommendation validity period', null=True)),
                ('recommendation_metadata', models.JSONField(default=dict, help_text='Stores model version, neighbor count, and feature weights')),
                ('user', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='ai_models.customerdetail')),
            ],
            options={
                'verbose_name': 'New Customer Recommendation',
                'verbose_name_plural': 'New Customer Recommendations',
                'ordering': ['-confidence_score'],
                'indexes': [models.Index(fields=['generation_date', '-confidence_score'], name='ai_models_n_generat_09f67b_idx'), models.Index(fields=['item_code', 'recommendation_type'], name='ai_models_n_item_co_6046a3_idx')],
            },
        ),
    ]
